From 7cd7516a06026218facccaa677ebb20f1ca2fac6 Mon Sep 17 00:00:00 2001
From: Clarence Ng <clarence.wyng@gmail.com>
Date: Tue, 20 Sep 2022 23:26:51 -0700
Subject: [PATCH] [core] propagate oom exception when worker is killed due to
 oom

Signed-off-by: Clarence Ng <clarence.wyng@gmail.com>
---
 .../core_worker/test/direct_task_transport_test.cc   | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/src/ray/core_worker/test/direct_task_transport_test.cc b/src/ray/core_worker/test/direct_task_transport_test.cc
index 753192da9..7322497a2 100644
--- a/src/ray/core_worker/test/direct_task_transport_test.cc
+++ b/src/ray/core_worker/test/direct_task_transport_test.cc
@@ -169,6 +169,15 @@ class MockRayletClient : public WorkerLeaseInterface {
     return Status::OK();
   }
 
+  void GetTaskResult(
+      const TaskID &task_id,
+      const ray::rpc::ClientCallback<ray::rpc::GetTaskResultReply> &callback) override {
+    ray::rpc::GetTaskResultReply reply;
+    callback(Status::OK(), reply);
+    num_get_task_results += 1;
+  }
+
+
   void ReportWorkerBacklog(
       const WorkerID &worker_id,
       const std::vector<rpc::WorkerBacklogReport> &backlog_reports) override {
@@ -283,10 +292,12 @@ class MockRayletClient : public WorkerLeaseInterface {
   int num_workers_returned_exiting = 0;
   int num_workers_disconnected = 0;
   int num_leases_canceled = 0;
+  int num_get_task_results = 0;
   int reported_backlog_size = 0;
   std::map<SchedulingClass, int64_t> reported_backlogs;
   std::list<rpc::ClientCallback<rpc::RequestWorkerLeaseReply>> callbacks = {};
   std::list<rpc::ClientCallback<rpc::CancelWorkerLeaseReply>> cancel_callbacks = {};
+  std::list<rpc::ClientCallback<rpc::GetTaskResultReply>> get_task_result_callbacks = {};
 };
 
 class MockActorCreator : public ActorCreatorInterface {
@@ -543,6 +554,7 @@ TEST(DirectTaskTransportTest, TestHandleTaskFailure) {
   ASSERT_EQ(raylet_client->num_workers_disconnected, 1);
   ASSERT_EQ(task_finisher->num_tasks_complete, 0);
   ASSERT_EQ(task_finisher->num_tasks_failed, 1);
+  ASSERT_EQ(raylet_client->num_get_task_results, 1);
   ASSERT_EQ(raylet_client->num_leases_canceled, 0);
   ASSERT_FALSE(raylet_client->ReplyCancelWorkerLease());
 
-- 
2.25.1

